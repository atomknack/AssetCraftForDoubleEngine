using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using DoubleEngine;
using DoubleEngine.Atom;
using System;

[System.Serializable]
public class DrawFlatNodes : MonoBehaviour
{
    [SerializeField] private GameObject baseFlatNodePlaceholder;
    [SerializeField] private GameObject complimentaryFlatNodePlaceholder;
    [SerializeField] private GameObject autoGeneratedPlaceholder;

    public void UpdateFlatNodes(FlatNode baseNode, FlatNode complimentary)
        {
        baseFlatNodePlaceholder.GetComponent<MeshFilter>().sharedMesh = baseNode.Transformed.ToNewUnityMesh();//.ToMeshFragmentVector3().ToUnityMesh();
        complimentaryFlatNodePlaceholder.GetComponent<MeshFilter>().sharedMesh = complimentary.Transformed.ToNewUnityMesh();//.ToMeshFragmentVector3().ToUnityMesh();
        Mesh g = new Mesh();
        if (TryAutogenerateSealingMesh(baseNode.Transformed.To2D(), complimentary.Transformed.To2D(), out MeshFragmentVec2D generated))
        {
            g.vertices = generated.Vertices.ConvertXYtoXYZArray(0).ToArrayVector3();
            g.triangles = generated.Triangles.ToArray();
            autoGeneratedPlaceholder.GetComponent<MeshFilter>().sharedMesh = g;
        }
        else
                {
                    //Debug.Log("Cannot generate auto sealing mesh");
            autoGeneratedPlaceholder.GetComponent<MeshFilter>().sharedMesh = g;
        }

    }
    public bool TryAutogenerateSealingMesh(MeshFragmentVec2D baseMesh, MeshFragmentVec2D complimentary, out MeshFragmentVec2D generated)
    {
        try
        {
            generated = MeshFragmentVec2D.Subtract(baseMesh, complimentary);
            return true;
        } 
        catch (Exception e)
        {
            Debug.LogException(e);
            generated = MeshFragmentVec2D.Empty;
            return false;
        }
    }

    public void CleanFlatNodes()
    {
        baseFlatNodePlaceholder.GetComponent<MeshFilter>().sharedMesh = null;
        complimentaryFlatNodePlaceholder.GetComponent<MeshFilter>().sharedMesh = null;
    }
}
